[{"content":"One of the most important parts of a working cluster is the interconnection and communication between nodes. While the networking side will not be covered now, a very important aspect will be: passwordless SSH.\nInter-node SSH The first task to getting easy access between nodes is ensuring SSH access between all the nodes.\nWhile not necessary, I recommend adding all your nodes to the /etc/hosts file on each node. For example, the /etc/hosts file might look like\n127.0.0.1 localhost # The following lines are desirable for IPv6 capable hosts ::1 ip6-localhost ip6-loopback fe00::0 ip6-localnet ff00::0 ip6-mcastprefix ff02::1 ip6-allnodes ff02::2 ip6-allrouters ff02::3 ip6-allhosts to which I would add (using the actual IPs of the nodes)\n192.168.0.11 node1 192.168.0.12 node2 192.168.0.13 node3 192.168.0.14 node4   Automate adding to your hosts files  1 2 3 4 5 6 7 8 9  for node in localhost node2 node3 node4; do ssh $node \u0026#34;cat | sudo tee -a /etc/hosts \u0026gt; /dev/null\u0026#34; \u0026lt;\u0026lt; EOF 192.168.0.11 node1 192.168.0.12 node2 192.168.0.13 node3 192.168.0.14 node4 EOF done      After this is added to your hosts file on all your nodes, from any node you should be able to ssh node1 from any of them successfully after entering your password.\nNOTE: if you have not configured static IP addresses for your nodes, any changes to their IPs will require you changing the hosts file on all your nodes. Passwordless SSH To be able to SSH between nodes without the need for a password, you will need to create an SSH key. This will allow SSH to work in scripts and tools (MPI) without needing user interaction.\nFirst, we need to create a key. There are multiple standards of encryption you can use for SSH keys. The default is RSA, but it is generally considered to be less secure than modern standards. Therefore, these instructions will show how to create a ed25519 key. This will work on your cluster, but some (very) old systems may not support ED25519 keys (RSA keys will generally work everywhere even though they are less secure).\nTo create a key, use this command on one of your nodes:\n1  ssh-keygen -t ed25519 -a 100 -f ~/.ssh/id_ed25519 -C \u0026#34;Inter-node cluster ssh\u0026#34;   This article does a good job of breaking down what all the arguments are used for.\nNext, we need our nodes to trust the key we just created. We\u0026rsquo;ll start with getting the current node to trust the key.\n1  ssh-copy-id -i ~/.ssh/id_ed25519 localhost   NOTE: If you have already setup NFS with a shared home directory, you don\u0026rsquo;t need to do anything further; the key is accessible and trusted on all the nodes. Now we can just copy these files to all the other nodes so that they can use and will trust this key.\n1 2 3 4 5  for node in node2 node3 node4; do # list all the nodes that should get the key ssh-copy-id -i ~/.ssh/id_ed25519 $node # you will need to enter your password for this step scp ~/.ssh/id_ed25519 $node:.ssh/ ssh $node \u0026#34;chmod 600 ~/.ssh/id_ed25519\u0026#34; # ensure the key is locked down so SSH will accept it. done   And to make all the nodes trust each other\u0026rsquo;s fingerprints\n1 2 3  for node in node2 node3 node4; do scp ~/.ssh/known_hosts $node:.ssh/ done   We can check that we can SSH into all the nodes without having to enter a password:\n1 2  for node in node2 node3 node4; do ssh $node \u0026#34;hostname\u0026#34;   ","description":"One of the most important parts of a working cluster is the interconnection and communication between nodes. While the networking side will not be covered now, a very important aspect will be: passwordless SSH.","id":0,"section":"posts","tags":["SSH","cluster"],"title":"Cluster SSH","uri":"https://johnhollowell.com/blog/posts/cluster-ssh/"},{"content":"Clemson\u0026rsquo;s School of Computing (SoC) is the place at Clemson where Computer Science (CPSC), Computer Information Systems (CIS), and Digital Production Arts (DPA) are located. Other computing departments (like Computer Engineering) also use some of the SoC\u0026rsquo;s systems. Below are some useful tips and tools for quickly getting going in the SoC.\nAccess Servers The access servers are the way you can access all the SoC computers from off-campus (without having to use the VPN). You can SSH into them and then SSH into other computers through access (or anything else you can do through SSH). You can connect to the access servers using ssh \u0026lt;clemson_username\u0026gt;@access.computing.clemson.edu (or just ssh access.computing.clemson.edu if you computer\u0026rsquo;s username matches your Clemson username). When you connect, you will see a list of lab computers that you can then connect to by using their name (e.g. ssh babbage1). You can also use access2.computing.clemson.edu if the main access server is down or overloaded.\nIf you are on campus, you can directly access the lab computers without the need to go through the access server. Simply use ssh \u0026lt;computer_name\u0026gt;.computing.clemson.edu while on campus (or VPN) and you can directly connect to the machine.\nNOTE: There is a limit in place on the number of connections for each user connecting to the access server. I\u0026rsquo;ve found it to be 4 connections. If you need more connections, consider using both access and access2 or using SSH Multiplexing. Files on the lab computers All the lab computers share your home directory. This means that if you write a file on one computer, you can access it on any other lab computer. This also means your settings for most programs will be the same on all the computers.\nThis also means you can access these files from your own computer as a network drive. Check out these instructions for more information on the subject (use the linux share instructions).\nSSH between computers SSHing between the lab machines can be a bit of a pain when you have to enter your password every time. It also makes it harder to write scripts that use multiple lab computers to work on rendering a project or running some processing. However, if you set up SSH keys on the computers, it allows the lab machines to connect to each other without the need for a password. And since the lab computers share files, once SSH keys are setup on one system, the will work on all the systems.\nThe process of making the keys we will use is fairly straight forward. You can check out more information on what these commands do if you are interested.\n1 2  ssh-keygen -t ed25519 -a 100 -f ~/.ssh/id_ed25519 -C \u0026#34;School of Computing\u0026#34; ssh-copy-id -i ~/.ssh/id_ed25519 localhost   This will generate a key for the computers to use, and \u0026ldquo;install\u0026rdquo; it so they will accept connections from that key. Since all the computers have the needed files due to the shared filesystem, all the computers now trust connections from all the other computers.\nSnapshot folder Oh no! You just deleted all the files for your assignment! Not to worry.\nYou home directory (/home/\u0026lt;username\u0026gt;/) on the SoC computers is backed up for just such a problem. Within every folder in your home directory is a hidden folder named .snapshot. It will not appear in any listing of directories, but if you cd into it, you can access all the different backups that are available. You can ls ~/.snapshot/ to see all the different dates that are have backups (there are hourly, daily, and weekly backups). These backup files are read-only, so you will need to copy them back into your home directory to be able to edit them.\nTo access and recover your files, you can either do\n1 2 3  cd ~ cd .snapshot/daily.1234-56-78_0010/path/to/your/files/ cp very-important-file.txt ~/path/to/your/files/   OR\n1 2 3  cd ~/path/to/your/files/ cd .snapshot/daily.1234-56-78_0010 cp very-important-file.txt ~/path/to/your/files/   Teachers' Office Hours While is isn\u0026rsquo;t really a technology in the SoC, your teachers are one of best resources to gain knowledge and software development skills. After all, the aren\u0026rsquo;t called teachers for nothing.\nAll teachers are required to have office hours (and so are Teaching Assistants (TAs)). Make use of this time to get to know your teacher, ask questions, and learn more about topics that excite you. It is also a good idea to start projects early (I\u0026rsquo;m not saying I ever did this, but it is what I should have done) so you can ask the teacher questions in office hours before everyone else starts to cram the assignment and office hours get busy.\nYOUR SUGGESTION HERE Is there something you really liked or have often used that you think I should add here or in another post? Get in contact with me and let me know!\n","description":"Clemson's School of Computing can be complicated. Here are some tips and tricks to get started quickly and make the most of the resources you have.","id":1,"section":"posts","tags":[""],"title":"Clemson SoC 101","uri":"https://johnhollowell.com/blog/posts/clemson-soc-101/"},{"content":"Clemson University’s computer labs store files across all the computers using network shares. You usually just access these shares on the lab machines, but you can also add the shares on your own computer as a network drive.\nThere are two main shares on campus: the campus share used by all the Windows (and Mac?) lab machines (e.g. in Cooper Library, Martin, etc.) and the School of Computing’s Linux systems. Both systems can be accessed in a similar way, but with different settings.\nTo access these network shares, you must either be on campus internet (WiFi or Ethernet) or have the Clemson VPN installed and activated on your device. See the CCIT guide for VPN access for more information.  The following instructions assume you are using a Windows device to access the shares. Using the credentials as below, you can follow a guide for adding network drives on Mac OS X or Linux (Ubuntu)\nSteps  Open File Explorer and go to \u0026ldquo;This PC\u0026rdquo;.  Click \u0026ldquo;Map Network Drive\u0026rdquo; in the top ribbon. Choose what drive letter you want the share to appear as (it doesn’t matter what you choose for this; I used \u0026ldquo;Z\u0026rdquo; for this example)  Linux Share Windows Share   Enter \\\\neon.cs.clemson.edu\\home into the \u0026ldquo;folder\u0026rdquo; box.   Check both \u0026ldquo;Reconnect as sign-in\u0026rdquo; and \u0026ldquo;Connect using different credentials\u0026rdquo; so the network drive will automatically connect and you can use your Clemson credentials (rather than your local device’s username and password). Click \u0026ldquo;Finish\u0026rdquo;.\n  Enter your University username (with @clemson.edu) and password. (You might have to click \u0026ldquo;more choices\u0026rdquo; in the login window to be able to enter a new username/password.)\n  Click \u0026ldquo;OK\u0026rdquo;. Your School of Computing home directory should now appear under the drive letter you chose.\n  NOTE: When adding new files via the network share, they are created with permissions defined by your umask. You can use chmod xxx \u0026lt;file\u0026gt; to change a files permissions to xxx (view a chomod guide for more information on the chmod command)   Enter \\\\home.clemson.edu\\\u0026lt;username\u0026gt; where \u0026lt;username\u0026gt; is your university username.   Check both \u0026ldquo;Reconnect as sign-in\u0026rdquo; and \u0026ldquo;Connect using different credentials\u0026rdquo; so the network drive will automatically connect and you can use your Clemson credentials (rather than your local device’s username and password). Click \u0026ldquo;Finish\u0026rdquo;.\n  Enter your University username (without @clemson.edu) and password. (You might have to click \u0026ldquo;more choices\u0026rdquo; in the login window to be able to enter a new username/password.)\n  Click \u0026ldquo;OK\u0026rdquo;. Your Windows home directory should now appear under the drive letter you chose.\n     'use strict'; var containerId = JSON.parse(\"\\\"19623ff1c17411e0\\\"\"); var containerElem = document.getElementById(containerId); var tabLinks = null; var tabContents = null; var ids = []; if (containerElem) { tabLinks = containerElem.querySelectorAll('.tab__link'); tabContents = containerElem.querySelectorAll('.tab__content'); } for (var i = 0; i 0) { tabContents[0].style.display = 'block'; }  You now have access to your files as if they were just another drive in your computer. Do note that these drives will be significantly slower than your actual computer drives due to higher latency and lower bandwidth.\n","description":"Clemson University’s computer labs store files across all the computers using network shares. You usually just access these shares on the lab machines, but you can also add the shares on your own computer as a network drive.","id":2,"section":"posts","tags":null,"title":"Accessing Your Clemson Network Shares","uri":"https://johnhollowell.com/blog/posts/accessing-your-clemson-network-shares/"},{"content":"I\u0026rsquo;m at my extended family\u0026rsquo;s house way out in the middle of nowhere; barely enough cellular connection for a SMS, let alone trying to use any data.\nThey have DSL, but they are so far out that the signal is poor and it also is horrible speed. The fastest I saw while I was there was 700Kbps.\nWhile it is always a shock to go from over 100Mbps to under 1Mbps, I think that we are in an age where low bandwidth is not a show-stopper. Now obviously, downloading large files and games is a lot more tedious, I have found the \u0026ldquo;set everything to download overnight\u0026rdquo; method works quite well.\nI think there are three main reason why you can do more with less bandwidth than ever before.\nCompression and Codecs We have reached the point where processing power is so cheap, most of the time everything else is the limitation. We are glad to spend some power and time compressing data if it means we have more storage space on our devices or use less data. Website analysis tools will now complain if a webserver doesn\u0026rsquo;t compress its responses with at least gzip.\nWe are (slowly) starting to use new video and audio codecs that compress the crap out of the video/audio stream. Many devices are even starting to have highly preformat hardware acceleration for these formats so it doesn\u0026rsquo;t even cause high load or power draw on mobile devices. Services like YouTube automatically convert content to many different qualities and have algorithms to pick the best quality that you can support.\nCaches, CDNS, and Apps Every web browser has a cache. Many even have several tiers of cache to give good hit/miss ratios and speed. If you are going to Facebook, you really should only ever need to receive the logo, most styles, and even some content once. This not only helps on slow connections, but even on fast connections an additional resource request can take a (relatively) long time to do an entire TCP and SSL handshake transaction.\nA further performance increase can be gained through websites' use of CDNs for their libraries and assets. If you are loading jQuery, FontAwesome, or bootstrap from local, you are doing it wrong. Pulling these assets from a CDN not only reduces the load on your server and the latency of the client accessing the resource, but allows caching these common resource between sites. If ou visit a site using version x of the y library and then visit another site that uses the same version of y, you should be able to cache the first request of that resource and reuse it for any subsequent pages in any site. You can only do this if you using a CDN (and the same, but realistically most resources either have their own CDN or use one of the most common CDNs that everyone else uses).\nAdditionally, the use of site-specific apps (while annoying) allows the apps to only pull new content and \u0026ldquo;cache\u0026rdquo; all the resources needed to display the app. This makes it assured that outside of app updates, all most of the app\u0026rsquo;s traffic is the content you want to see (or ads sigh).\nMobile Focused Pages Thanks the the horrible practices of the Cellular Companies, anything that is loaded on a cellular connection needs to be small to not use much data to fit within limited bandwidth and even more limited data caps. While I have a great distaste for the stupidity of Cell carriers, their limitations have forced encouraged developments in efficient compression and transmission of pages (as well as a lot of bad practices in lazy loading and obfuscating in the name of minifying). Mosts sites will load smaller or more compressed assets when they detect they are on mobile platforms.\nCaveates While I did \u0026ldquo;survive\u0026rdquo; on the limited connection, I knew it was coming and was able to prepare a bit for it. I downloaded a couple of additional playlists on Spotify and synced a few episodes of TV to my phone from my Plex. However, I did not even use these additional downloads. I used the podcasts I had previously downloaded and even downloaded an additional episode while there. The ability in most apps to download content makes even a trickle of internet be enough to slowly build up the content you want.\nI have also recently reset my laptop and had to download FFmpeg while there. It took a few minutes, but it didn\u0026rsquo;t fail. I did want to do some complex computing while there, but since most of what I do is on other computers (servers, remote machines, etc) it was incredibly easy to do what I wanted to do through an SSH connection to a datacenter. This is cheating a little bit but really is not out of the ordinary; even of fast internet I would SSH out to do things I didn\u0026rsquo;t want or couldn\u0026rsquo;t do on my device (thanks Windows).\nThis was also a family gathering, so I didn\u0026rsquo;t spend much time on the internet. I could quickly google the answer to win an argument and that was all I needed.\nConclusion Slow internet is still a pain, but I\u0026rsquo;ve grown to appreciate its limitations and work around them. Several trends in computing and content delivery in recent years have made slow internet more bearable. I won\u0026rsquo;t be giving up my high-speed internet any time soon, but slowing down and disconnecting a bit is a nice change of pace in this time where everything has to happen online.\n","description":"While it is always a shock to go from over 100Mbps to under 1Mbps, I think that we are in an age where low bandwidth is not a show-stopper.","id":4,"section":"posts","tags":["web","life","opinion"],"title":"A Trickle Is Better Than Nothing","uri":"https://johnhollowell.com/blog/posts/a-trickle-is-better-than-nothing/"},{"content":"2021. A new year; a new start.\nI\u0026rsquo;ve wanted to start a blog for a while, and I thought I might as well start it on the first of the year. I think I finally have enough things I want to talk about that a blog is worth the effort.\nWhat\u0026rsquo;s in a Name? So why the name \u0026ldquo;/dev/random\u0026rdquo;? Well, I\u0026rsquo;m a geek and this blog will be about anything. I don\u0026rsquo;t want to confine this blog to any one subject (including to just tech) and I want the entirety of the blog to be representative of that. It also give me the opportunity to have a punny subtitle, which I am always appreciative of.\nSo\u0026hellip; Why? This blog is mostly a place for me to put information for my future self and others. Don\u0026rsquo;t expect any deep, rambling prose. I\u0026rsquo;m not a spectacular writer and there are many things in my life that don\u0026rsquo;t merit blogging about. However, I have a vary wide range of knowledge which I often will forget by the next time I need to use it. This gives me a way to record my experiences and experiments in a public place to which I can reference others. This blog is also an experiment, how meta is that?\nWhen can I get more of this great content? I would like to at least work on this blog every day. That doesn\u0026rsquo;t mean a new post every month; longer and more detailed posts will take me a bit longer. I might hold a post so a whole series can be release together. I might get bored and never create another post. Who knows?\n","description":"I've wanted to start a blog for a while, and I thought I might as well start it on the first of the year. I think I finally have enough things I want to talk about that a blog is worth the effort.","id":5,"section":"posts","tags":null,"title":"And So It Begins","uri":"https://johnhollowell.com/blog/posts/and-so-it-begins/"}]