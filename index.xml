<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>/dev/random: A Bit of Everything</title><link>https://johnhollowell.com/blog/</link><description>Recent content on /dev/random: A Bit of Everything</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>contact@johnhollowell.com (John Hollowell)</managingEditor><webMaster>contact@johnhollowell.com (John Hollowell)</webMaster><copyright>Â©2023 John Hollowell, All Rights Reserved</copyright><lastBuildDate>Mon, 17 Jul 2023 22:55:22 +0000</lastBuildDate><atom:link href="https://johnhollowell.com/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>Framework Followup</title><link>https://johnhollowell.com/blog/posts/framework-followup/</link><pubDate>Mon, 17 Jul 2023 22:55:22 +0000</pubDate><author>contact@johnhollowell.com (John Hollowell)</author><atom:modified>Mon, 17 Jul 2023 22:55:22 +0000</atom:modified><guid>https://johnhollowell.com/blog/posts/framework-followup/</guid><description>I&amp;rsquo;ll start off by saying I love my Framework laptop. The transition from my old 15&amp;quot; laptop to this 13&amp;quot; Framework has been a lot more seamless than I thought it would be. It has worked perfectly for everything I&amp;rsquo;ve put it through.
My Experience With My Framework Battery Life Even with the recently-replaced batter in my old laptop, my Framework has a much longer battery life. Likely a combination of both the battery and processor, I&amp;rsquo;m able to get many hours of even a demanding workload.</description><dc:creator>John Hollowell</dc:creator><media:content url="https://johnhollowell.com/blog/post-cover-image/framework.jpg" medium="image"><media:title type="html">featured image</media:title></media:content><category>hardware</category><category>life</category><category>review</category><category>framework</category></item><item><title>Framework First Impressions</title><link>https://johnhollowell.com/blog/posts/framework-first-impressions/</link><pubDate>Fri, 24 Feb 2023 02:10:42 +0000</pubDate><author>contact@johnhollowell.com (John Hollowell)</author><atom:modified>Fri, 24 Feb 2023 02:10:42 +0000</atom:modified><guid>https://johnhollowell.com/blog/posts/framework-first-impressions/</guid><description>I recently upgraded my laptop to a Framework laptop since my old trusty laptop&amp;rsquo;s screen cracked and a replacement screen cost as much as some new laptops. These are my initial impressions of the laptop&amp;rsquo;s build, performance, and usability.
Use Case I have a bit of a minimal use case for my laptop. Since I have a powerful desktop and a fairly performant phone, I don&amp;rsquo;t need my laptop to be a do-everything device.</description><dc:creator>John Hollowell</dc:creator><media:content url="https://johnhollowell.com/blog/post-cover-image/framework.jpg" medium="image"><media:title type="html">featured image</media:title></media:content><category>hardware</category><category>life</category><category>review</category><category>framework laptop</category></item><item><title>NVMe Boot in Proxmox on Older BIOS</title><link>https://johnhollowell.com/blog/posts/nvme-proxmox-bios/</link><pubDate>Tue, 27 Dec 2022 18:54:12 +0000</pubDate><author>contact@johnhollowell.com (John Hollowell)</author><atom:modified>Tue, 27 Dec 2022 18:54:12 +0000</atom:modified><guid>https://johnhollowell.com/blog/posts/nvme-proxmox-bios/</guid><description>Trying to boot off an NVMe drive on older hardware can cause some issues. If you are running an older BIOS/UEFI, it may not have the needed drivers to understand how to talk to a NVMe drive. I ran into this exact issue when trying to boot my Dell R510 from an NVMe drive.
To boot from NVMe, I would need to use some shim which could be booted by the BIOS which would chain-boot the actual OS on the NVMe.</description><dc:creator>John Hollowell</dc:creator><category>sysadmin</category><category>proxmox</category></item><item><title>All Things Open 2022 Impressions</title><link>https://johnhollowell.com/blog/posts/ato22/</link><pubDate>Thu, 24 Nov 2022 16:58:11 +0000</pubDate><author>contact@johnhollowell.com (John Hollowell)</author><atom:modified>Thu, 24 Nov 2022 16:58:11 +0000</atom:modified><guid>https://johnhollowell.com/blog/posts/ato22/</guid><description>This was my first year going to the All Things Open and my first in-person conference in several years.
Overall, I really enjoyed the conference and would recommend other&amp;rsquo;s attend. It definitely helped that I already live in Raleigh so I didn&amp;rsquo;t have to travel to the conference, but even traveling to the conference would be a good experience.
Venue The Raleigh conference center is a spacious venue. The paths to the session rooms are wide and easy to access.</description><dc:creator>John Hollowell</dc:creator><media:content url="https://johnhollowell.com/blog/post-cover-image/ato22.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>life</category><category>ATO</category><category>conference</category></item><item><title>Masters Degree Takeaways</title><link>https://johnhollowell.com/blog/posts/masters-degree-takeaways/</link><pubDate>Sat, 18 Dec 2021 21:44:42 +0000</pubDate><author>contact@johnhollowell.com (John Hollowell)</author><atom:modified>Sat, 18 Dec 2021 21:44:42 +0000</atom:modified><guid>https://johnhollowell.com/blog/posts/masters-degree-takeaways/</guid><description>This December I graduated from Clemson University with my Masters degree in Computer Science. There were a lot of things I learned (obviously), but I think the most useful things I learned were not from the course material, but my outside learning and interactions with peers and professors.
Project Organization All my courses this semester were project based; while some of the grade for the course came from quizzes or homeworks, over 50% came from a semester long project.</description><dc:creator>John Hollowell</dc:creator><media:content url="https://johnhollowell.com/blog/post-cover-image/masters-degree-takeaways.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>life</category><category>opinion</category></item><item><title>ZFS Backups to Files</title><link>https://johnhollowell.com/blog/posts/zfs-backups-to-files/</link><pubDate>Wed, 11 Aug 2021 05:02:34 +0000</pubDate><author>contact@johnhollowell.com (John Hollowell)</author><atom:modified>Wed, 11 Aug 2021 05:02:34 +0000</atom:modified><guid>https://johnhollowell.com/blog/posts/zfs-backups-to-files/</guid><description>ZFS is a great filesystem that I use on most of my systems and it makes full-drive backups a breeze when I am refreshing hardware in my homelab. However, sometimes I want to backup to a non-ZFS system. These are the steps I use for fast and verified backups to a file on another computer.
TL;DR: Combine the power of ZFS, zStandard, pv, and netcat to have a fast backup of a ZFS snapshot with verbose metrics of the process and progress.</description><dc:creator>John Hollowell</dc:creator><category>ZFS</category><category>backup</category><category>sysadmin</category><category>guide</category></item><item><title>TIL: Kernel Same-page Merging (KSM)</title><link>https://johnhollowell.com/blog/posts/til-ksm/</link><pubDate>Sat, 24 Jul 2021 00:39:18 +0000</pubDate><author>contact@johnhollowell.com (John Hollowell)</author><atom:modified>Sat, 24 Jul 2021 00:39:18 +0000</atom:modified><guid>https://johnhollowell.com/blog/posts/til-ksm/</guid><description>I first noticed Kernel Same-page Merging (KSM) while working with Virtual Machines (VMs) under KVM (in Proxmox VE).
KSM is a way of reducing physical memory usage by using one physical page of memory for all duplicate copied of that page. It does this by periodically scanning through memory, finding duplicate pages, and de-duplicating them via virtual memory. It is an extension of how the kernel shares pages between fork()&amp;lsquo;ed processes and uses many of the same methods of sharing memory.</description><dc:creator>John Hollowell</dc:creator><category>Linux</category><category>memory</category><category>TIL</category></item><item><title>Nothing Is Definitely Worse Than a Trickle</title><link>https://johnhollowell.com/blog/posts/nothing-is-definitely-worse-than-a-trickle/</link><pubDate>Sat, 26 Jun 2021 17:02:39 +0000</pubDate><author>contact@johnhollowell.com (John Hollowell)</author><atom:modified>Sat, 26 Jun 2021 17:02:39 +0000</atom:modified><guid>https://johnhollowell.com/blog/posts/nothing-is-definitely-worse-than-a-trickle/</guid><description>Please read A Trickle Is Better Than Nothing before reading this post. I just got over having no internet at my apartment for over a week. I was gone a portion of the week, but it was still very inconvenient. Working remotely doesn&amp;rsquo;t help as to get paid I need to have an internet connection (but not necessarily a fast connection).
Working Around It While I could have use cellular data to carry me through, I had already used a significant portion of my data cap on various travels this summer.</description><dc:creator>John Hollowell</dc:creator><media:content url="https://johnhollowell.com/blog/post-cover-image/no-internet.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>web</category><category>life</category><category>opinion</category><category>networks</category></item><item><title>Getting Started With Devcontainers</title><link>https://johnhollowell.com/blog/posts/getting-started-with-devcontainers/</link><pubDate>Fri, 25 Jun 2021 20:06:55 +0000</pubDate><author>contact@johnhollowell.com (John Hollowell)</author><atom:modified>Fri, 25 Jun 2021 20:06:55 +0000</atom:modified><guid>https://johnhollowell.com/blog/posts/getting-started-with-devcontainers/</guid><description>Setting up and maintaining a development environment is hard, especially when you need to destructively test features or libraries. Especially for contributing to a new project, you don&amp;rsquo;t know everything that is needed. Sometimes the install/development instructions assume some base tools or packages that are not included in your development environment of choice.
In come devcontainers. Rather than having to search through the README for a project you are wanting to contribute to, installing several packages onto your machine, and troubleshooting when it doesn&amp;rsquo;t work, you can simply open the repository as a devcontainer and you are ready to start contributing.</description><dc:creator>John Hollowell</dc:creator><media:content url="https://johnhollowell.com/blog/post-cover-image/vscode_remote-containers.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>development</category><category>containers</category><category>101</category><category>guide</category></item><item><title>TIL: AD Forests</title><link>https://johnhollowell.com/blog/posts/til-ad-forests/</link><pubDate>Tue, 08 Jun 2021 06:10:52 +0000</pubDate><author>contact@johnhollowell.com (John Hollowell)</author><atom:modified>Tue, 08 Jun 2021 06:10:52 +0000</atom:modified><guid>https://johnhollowell.com/blog/posts/til-ad-forests/</guid><description>For environments with complex Active Directory (AD) environments, AD forests can allow flexibility in management and organization of objects.
Basically, an AD forest allows multiple domains and trees of domains (subdomains) to access and have a shared configuration while still having separate domains with separate host servers.
They allow domains to trust and access each other while still maintain separations and boarders. I&amp;rsquo;ve seen this used to allow corporate and client domains to communicate or to have a development domain tree that trust and can cross-talk with the production domain tree while still being separate (this is less common as dev domains are usually just subdomains within the production tree).</description><dc:creator>John Hollowell</dc:creator><media:content url="https://johnhollowell.com/blog/post-cover-image/ad_forest.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>Active Directory</category><category>TIL</category></item><item><title>Change Username Without Separate Session</title><link>https://johnhollowell.com/blog/posts/change-username-without-separate-session/</link><pubDate>Sun, 14 Mar 2021 18:51:50 -0400</pubDate><author>contact@johnhollowell.com (John Hollowell)</author><atom:modified>Sun, 14 Mar 2021 18:51:50 -0400</atom:modified><guid>https://johnhollowell.com/blog/posts/change-username-without-separate-session/</guid><description>Changing a user&amp;rsquo;s username on Linux requires no processes be running under that user. This makes sense, but what if we only have that user accessible through a SSh connection? What if we don&amp;rsquo;t want to allow external access to the root account? What if the root account doesn&amp;rsquo;t have a password?
Background I was recently spinning up a bunch of Raspberry Pis running Ubuntu 20.04 and some VPSes also running Ubuntu 20.</description><dc:creator>John Hollowell</dc:creator><category>sysadmin</category><category>guide</category></item><item><title>Cluster SSH</title><link>https://johnhollowell.com/blog/posts/cluster-ssh/</link><pubDate>Sun, 07 Mar 2021 23:15:41 -0500</pubDate><author>contact@johnhollowell.com (John Hollowell)</author><atom:modified>Sun, 07 Mar 2021 23:15:41 -0500</atom:modified><guid>https://johnhollowell.com/blog/posts/cluster-ssh/</guid><description>One of the most important parts of a working cluster is the interconnection and communication between nodes. While the networking side will not be covered now, a very important aspect will be: passwordless SSH.
Inter-node SSH The first task to getting easy access between nodes is ensuring SSH access between all the nodes.
While not necessary, I recommend adding all your nodes to the /etc/hosts file on each node. For example, the /etc/hosts file might look like</description><dc:creator>John Hollowell</dc:creator><media:content url="https://johnhollowell.com/blog/post-cover-image/bash_logo.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>SSH</category><category>cluster</category><category>networks</category><category>guide</category><category>networks</category><category>Raspberry Pi Cluster</category></item><item><title>Basic Cluster Setup</title><link>https://johnhollowell.com/blog/posts/basic-cluster-setup/</link><pubDate>Sun, 07 Mar 2021 14:50:38 -0500</pubDate><author>contact@johnhollowell.com (John Hollowell)</author><atom:modified>Sun, 07 Mar 2021 14:50:38 -0500</atom:modified><guid>https://johnhollowell.com/blog/posts/basic-cluster-setup/</guid><description>So you want to build a Raspberry Pi cluster.
The first thing to do is determine the size of a cluster you want to build. You can go with any number greater than one, but I&amp;rsquo;ve found that 4-8 is a good sweet spot between too few nodes to get a real feel of cluster operation and too many nodes to manage and maintain. For this and following posts, I will be assuming a cluster of 4 nodes (node01 to node04).</description><dc:creator>John Hollowell</dc:creator><media:content url="https://johnhollowell.com/blog/post-cover-image/raspberry-pis.jpg" medium="image"><media:title type="html">featured image</media:title></media:content><category>cluster</category><category>networks</category><category>hardware</category><category>Raspberry Pi Cluster</category></item><item><title>Clemson SoC 101</title><link>https://johnhollowell.com/blog/posts/clemson-soc-101/</link><pubDate>Mon, 08 Feb 2021 20:08:42 -0500</pubDate><author>contact@johnhollowell.com (John Hollowell)</author><atom:modified>Mon, 08 Feb 2021 20:08:42 -0500</atom:modified><guid>https://johnhollowell.com/blog/posts/clemson-soc-101/</guid><description>Clemson&amp;rsquo;s School of Computing (SoC) is the place at Clemson where Computer Science (CPSC), Computer Information Systems (CIS), and Digital Production Arts (DPA) are located. Other computing departments (like Computer Engineering) also use some of the SoC&amp;rsquo;s systems. Below are some useful tips and tools for quickly getting going in the SoC.
Access Servers The access servers are the way you can access all the SoC computers from off-campus (without having to use the VPN).</description><dc:creator>John Hollowell</dc:creator><category>101</category><category>Getting started in CS at Clemson</category></item><item><title>Accessing Your Clemson Network Shares</title><link>https://johnhollowell.com/blog/posts/accessing-your-clemson-network-shares/</link><pubDate>Sun, 07 Feb 2021 14:08:51 -0500</pubDate><author>contact@johnhollowell.com (John Hollowell)</author><atom:modified>Sun, 07 Feb 2021 14:08:51 -0500</atom:modified><guid>https://johnhollowell.com/blog/posts/accessing-your-clemson-network-shares/</guid><description>Clemson Universityâs computer labs store files across all the computers using network shares. You usually just access these shares on the lab machines, but you can also add the shares on your own computer as a network drive.
There are two main shares on campus: the campus share used by all the Windows (and Mac?) lab machines (e.g. in Cooper Library, Martin, etc.) and the School of Computingâs Linux systems.</description><dc:creator>John Hollowell</dc:creator><category>clemson</category><category>Getting started in CS at Clemson</category></item><item><title>A Trickle Is Better Than Nothing</title><link>https://johnhollowell.com/blog/posts/a-trickle-is-better-than-nothing/</link><pubDate>Sat, 02 Jan 2021 21:31:47 -0500</pubDate><author>contact@johnhollowell.com (John Hollowell)</author><atom:modified>Sat, 02 Jan 2021 21:31:47 -0500</atom:modified><guid>https://johnhollowell.com/blog/posts/a-trickle-is-better-than-nothing/</guid><description>I&amp;rsquo;m at my extended family&amp;rsquo;s house way out in the middle of nowhere; barely enough cellular connection for an SMS, let alone trying to use any data.
They have DSL, but they are so far out that the signal is poor and it also is horrible speed. The fastest I saw while I was there was 700Kbps.
While it is always a shock to go from over 100Mbps to under 1Mbps, I think that we are in an age where low bandwidth is not a show-stopper.</description><dc:creator>John Hollowell</dc:creator><category>web</category><category>life</category><category>opinion</category><category>networks</category></item><item><title>And So It Begins</title><link>https://johnhollowell.com/blog/posts/and-so-it-begins/</link><pubDate>Fri, 01 Jan 2021 15:00:25 -0500</pubDate><author>contact@johnhollowell.com (John Hollowell)</author><atom:modified>Fri, 01 Jan 2021 15:00:25 -0500</atom:modified><guid>https://johnhollowell.com/blog/posts/and-so-it-begins/</guid><description>2021. A new year; a new start.
I&amp;rsquo;ve wanted to start a blog for a while, and I thought I might as well start it on the first of the year. I think I finally have enough things I want to talk about that a blog is worth the effort.
What&amp;rsquo;s in a Name? So why the name &amp;ldquo;/dev/random&amp;rdquo;? Well, I&amp;rsquo;m a geek and this blog will be about anything. I don&amp;rsquo;t want to confine this blog to any one subject (including to just tech) and I want the entirety of the blog to be representative of that.</description><dc:creator>John Hollowell</dc:creator><category>meta</category></item></channel></rss>